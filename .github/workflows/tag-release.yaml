name: Auto Tag and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write    # 允许写入 tag & release

jobs:
  tag-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo (fetch all tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Get latest tag
        id: get_latest
        run: |
          # 获取最近的 tag（没有则返回 0.0.0）
          latest=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "latest_tag=$latest" >> "$GITHUB_OUTPUT"

      - name: Compute new tag (patch++)
        id: bump
        run: |
          latest="${{ steps.get_latest.outputs.latest_tag }}"
          # 去掉可能前置的 v（如果你使用 v1.2.3 风格）
          ver=${latest#v}
          IFS='.' read -r maj min patch <<< "$ver"
          # 若解析失败则默认 0.0.0
          maj=${maj:-0}
          min=${min:-0}
          patch=${patch:-0}
          patch=$((patch + 1))
          new_tag="$maj.$min.$patch"
          echo "new_tag=$new_tag" >> "$GITHUB_OUTPUT"

      - name: Create tag and push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          new_tag="${{ steps.bump.outputs.new_tag }}"
          echo "Creating tag: $new_tag"
          git tag -a "$new_tag" -m "Release $new_tag"
          # 推到 origin（checkout 已用 GITHUB_TOKEN 设置凭据）
          git push origin "refs/tags/$new_tag"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.bump.outputs.new_tag }}
          release_name: Release ${{ steps.bump.outputs.new_tag }}
          body: "自动发布 ${{ steps.bump.outputs.new_tag }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}