name: Auto Tag, Branch and Release

on:
  push:
    branches:
      - main
  workflow_dispatch: # 支持手动触发
  
permissions:
  contents: write

jobs:
  tag-branch-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo (fetch all tags & branches)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Setup git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Get latest tag
        id: get_latest
        run: |
          latest=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "latest_tag=$latest" >> "$GITHUB_OUTPUT"

      - name: Compute new tag (patch++)
        id: bump
        run: |
          latest="${{ steps.get_latest.outputs.latest_tag }}"
          ver=${latest#v}
          IFS='.' read -r maj min patch <<< "$ver"
          maj=${maj:-0}
          min=${min:-0}
          patch=${patch:-0}
          patch=$((patch + 1))
          new_tag="$maj.$min.$patch"
          echo "new_tag=$new_tag" >> "$GITHUB_OUTPUT"

      - name: Create tag and push
        id: push_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          new_tag="${{ steps.bump.outputs.new_tag }}"
          echo "Creating tag: $new_tag"
          git tag -a "$new_tag" -m "Release $new_tag"
          git push origin "refs/tags/$new_tag"

      - name: Create branch with same name (if not exists)
        id: create_branch
        run: |
          new_tag="${{ steps.bump.outputs.new_tag }}"
          # 检查远端是否已存在该分支
          if git ls-remote --heads origin "refs/heads/$new_tag" | grep -q "$new_tag"; then
            echo "Branch $new_tag already exists on origin, skipping creation."
            echo "branch_created=false" >> "$GITHUB_OUTPUT"
          else
            echo "Creating branch $new_tag from origin/main"
            # 确保 main 已经抓取
            git fetch origin main:refs/remotes/origin/main
            git checkout -b "$new_tag" "origin/main"
            git push origin "refs/heads/$new_tag"
            echo "branch_created=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.bump.outputs.new_tag }}
          release_name: Release ${{ steps.bump.outputs.new_tag }}
          body: "自动发布 ${{ steps.bump.outputs.new_tag }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build amd64
        run: |
          docker build --no-cache -t nuoyis1024/nuoyis-lnmp:amd64 .
          docker push nuoyis1024/nuoyis-lnmp:amd64

  build-arm64:
    runs-on: [self-hosted, Linux, ARM64]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build arm64
        run: |
          docker build --no-cache -t nuoyis1024/nuoyis-lnmp:arm64 .
          docker push nuoyis1024/nuoyis-lnmp:arm64
          docker rmi nuoyis1024/nuoyis-lnmp:arm64

  create-manifest:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create & Push Multi-arch Manifest
        run: |
          docker manifest create nuoyis1024/nuoyis-lnmp:${{ needs.release-and-build.outputs.new_tag }} \
            --amend nuoyis1024/nuoyis-lnmp:amd64 \
            --amend nuoyis1024/nuoyis-lnmp:arm64

          docker manifest push nuoyis1024/nuoyis-lnmp:${{ needs.release-and-build.outputs.new_tag }}

          docker manifest create nuoyis1024/nuoyis-lnmp:latest \
            --amend nuoyis1024/nuoyis-lnmp:amd64 \
            --amend nuoyis1024/nuoyis-lnmp:arm64

          docker manifest push nuoyis1024/nuoyis-lnmp:latest

          docker manifest create registry.cn-hangzhou.aliyuncs.com/nuoyis/nuoyis-lnmp:${{ needs.release-and-build.outputs.new_tag }} \
            --amend registry.cn-hangzhou.aliyuncs.com/nuoyis/nuoyis-lnmp:amd64 \
            --amend registry.cn-hangzhou.aliyuncs.com/nuoyis/nuoyis-lnmp:arm64
          docker manifest push registry.cn-hangzhou.aliyuncs.com/nuoyis/nuoyis-lnmp:${{ needs.release-and-build.outputs.new_tag }}

          docker manifest create registry.cn-hangzhou.aliyuncs.com/nuoyis/nuoyis-lnmp:latest \
            --amend registry.cn-hangzhou.aliyuncs.com/nuoyis/nuoyis-lnmp:amd64 \
            --amend registry.cn-hangzhou.aliyuncs.com/nuoyis/nuoyis-lnmp:arm64
          docker manifest push registry.cn-hangzhou.aliyuncs.com/nuoyis/nuoyis-lnmp:latest