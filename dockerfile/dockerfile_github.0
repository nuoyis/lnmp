# Github 编译版本
FROM docker.io/debian:12 as builder

# 设置默认 shell
SHELL ["/bin/bash", "-c"]

# 定义版本变量
ARG NGINX_VERSION
ARG PHP_LATEST_VERSION
ARG PHP_STABLE_VERSION
ARG PHP_REDIS_VERSION
ARG MARIADB_LATEST_VERSION

# 更换软件源，并安装基础依赖
RUN sed -i 's/http:\/\/deb.debian.org/https:\/\/mirrors.aliyun.com/g' /etc/apt/sources.list.d/debian.sources && \
    apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false update -y && \
    apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false upgrade -y && \
    apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false install -y --no-install-recommends \
        ca-certificates \
        vim \
        jq \
        wget \
        autoconf \
        bison \
        re2c \
        make \
        procps \
        gcc \
        cmake \
        g++ \
        bison \
        libicu-dev \
        inetutils-ping \
        pkg-config \
        build-essential \
        libpcre3 \
        libpcre3-dev \
        libncurses5-dev \
        gnutls-dev \
        zlib1g-dev \
        openssl \
        libssl-dev \
        libxslt1-dev \
        libpng-dev \
        libjpeg-dev \
        libfreetype6-dev \
        libxml2-dev \
        libsqlite3-dev \
        libbz2-dev \
        libcurl4-openssl-dev \
        libxpm-dev \
        libzip-dev \
        libonig-dev \
        libgd-dev \
        libaio-dev \
        libgeoip-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# 目录初始化
RUN mkdir -p /nuoyis-build/php-$PHP_LATEST_VERSION/ext/php-redis \
    /nuoyis-build/php-$PHP_STABLE_VERSION/ext/php-redis \
    /nuoyis-web/{logs/nginx,nginx/{conf,webside/default,server/$NGINX_VERSION/conf/ssl}} \
    /var/run/php/{stable,latest} \
    /nuoyis-web/mariadb/{data,config}

# 下载源码
WORKDIR /nuoyis-build
RUN wget https://mirrors.huaweicloud.com/nginx/nginx-$NGINX_VERSION.tar.gz && \
    wget https://www.php.net/distributions/php-$PHP_LATEST_VERSION.tar.gz && \
    wget https://openlist.nuoyis.net/d/blog/linux%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%8A%A0%E9%80%9F/php/php-$PHP_STABLE_VERSION.tar.gz && \
    wget https://github.com/phpredis/phpredis/archive/refs/tags/$PHP_REDIS_VERSION.tar.gz && \
    wget https://mirrors.aliyun.com/mariadb/mariadb-$MARIADB_LATEST_VERSION/source/mariadb-$MARIADB_LATEST_VERSION.tar.gz && \
    wget https://www.openssl.org/source/openssl-1.1.1w.tar.gz && \
    wget https://curl.se/download/curl-7.87.0.tar.gz && \
    tar -xzf nginx-$NGINX_VERSION.tar.gz && \
    tar -xzf php-$PHP_LATEST_VERSION.tar.gz && \
    tar -xzf php-$PHP_STABLE_VERSION.tar.gz && \
    tar -xzf $PHP_REDIS_VERSION.tar.gz && \
    tar -xzf mariadb-$MARIADB_LATEST_VERSION.tar.gz && \
    tar -xzf openssl-1.1.1w.tar.gz && \
    tar -xzf curl-7.87.0.tar.gz

# Nginx编译
WORKDIR /nuoyis-build/nginx-$NGINX_VERSION
RUN sed -i 's/#define NGINX_VERSION\s\+".*"/#define NGINX_VERSION      \"$NGINX_VERSION\"/g' ./src/core/nginx.h && \
    sed -i 's/"nginx\/" NGINX_VERSION/"nuoyis server"/g' ./src/core/nginx.h && \
    sed -i 's/Server: nginx/Server: nuoyis server/g' ./src/http/ngx_http_header_filter_module.c && \
    sed -i 's/"Server: " NGINX_VER CRLF/"Server: nuoyis server" CRLF/g' ./src/http/ngx_http_header_filter_module.c && \
    sed -i 's/"Server: " NGINX_VER_BUILD CRLF/"Server: nuoyis server" CRLF/g' ./src/http/ngx_http_header_filter_module.c && \
    ./configure --prefix=/nuoyis-web/nginx/server \
                --user=nuoyis-web --group=nuoyis-web \
                --with-compat \
                --with-file-aio \
                --with-threads \
                --with-http_addition_module \
                --with-http_auth_request_module \
                --with-http_dav_module \
                --with-http_flv_module \
                --with-http_gunzip_module \
                --with-http_gzip_static_module \
                --with-http_mp4_module \
                --with-http_random_index_module \
                --with-http_realip_module \
                --with-http_secure_link_module \
                --with-http_slice_module \
                --with-http_ssl_module \
                --with-http_stub_status_module \
                --with-http_sub_module \
                --with-http_v2_module \
                --with-mail \
                --with-mail_ssl_module \
                --with-stream \
                --with-stream_realip_module \
                --with-stream_ssl_module \
                --with-stream_ssl_preread_module \
                --with-cc-opt="-static" \
                --with-ld-opt="-static" && \
    make -j$(nproc) && make install

# 复制 php Redis 源码
WORKDIR /nuoyis-build
RUN cp -r phpredis-$PHP_REDIS_VERSION/* php-$PHP_LATEST_VERSION/ext/php-redis && \
    cp -r phpredis-$PHP_REDIS_VERSION/* php-$PHP_STABLE_VERSION/ext/php-redis

# php stable 版本 openssl 编译
WORKDIR /nuoyis-build/openssl-1.1.1w
RUN ./config --prefix=/nuoyis-web/openssl-1.1.1 --openssldir=/nuoyis-web/openssl-1.1.1 no-shared no-dso no-tests && make -j$(nproc) && make install

# php stable 版本 curl 编译
WORKDIR /nuoyis-build/curl-7.87.0
RUN ./configure --prefix=/nuoyis-web/curl-openssl --with-ssl=/nuoyis-web/openssl-1.1.1 --disable-shared --enable-static && make -j$(nproc) && make install

# php 编译
RUN for phpversion in $PHP_STABLE_VERSION $PHP_LATEST_VERSION; do \
    if [ "$phpversion" == "$PHP_STABLE_VERSION" ]; then \
        export CURL_PREFIX="/nuoyis-web/curl-openssl"; \
        export OPENSSL_PREFIX_PATH="/nuoyis-web/openssl-1.1.1"; \
        export CPPFLAGS="-I${OPENSSL_PREFIX_PATH}/include -I${CURL_PREFIX}/include"; \
        export LDFLAGS="-L${OPENSSL_PREFIX_PATH}/lib -L${CURL_PREFIX}/lib"; \
        export PKG_CONFIG_PATH="${CURL_PREFIX}/lib/pkgconfig:${OPENSSL_PREFIX_PATH}/lib/pkgconfig:${PKG_CONFIG_PATH:-}"; \
        export LD_LIBRARY_PATH="${OPENSSL_PREFIX_PATH}/lib:${CURL_PREFIX}/lib:${LD_LIBRARY_PATH:-}"; \
        CONFIG_CURL="--with-curl=${CURL_PREFIX} --with-openssl=${OPENSSL_PREFIX_PATH}"; \
    else \
        unset CURL_PREFIX OPENSSL_PREFIX_PATH CPPFLAGS LDFLAGS PKG_CONFIG_PATH LD_LIBRARY_PATH; \
        CONFIG_CURL="--with-curl --with-openssl"; \
    fi; \
      cd /nuoyis-build/php-$phpversion; \
      ./configure --prefix=/nuoyis-web/php/$phpversion/ \
                  --with-config-file-path=/nuoyis-web/php/$phpversion/etc/ \
                  --with-freetype \
                  --enable-gd \
                  --with-jpeg \
                  --with-gettext \
                  --with-libdir=lib64 \
                  --with-libxml \
                  --with-mysqli \
                  $OPENSSL_PREFIX \
                  --with-pdo-mysql \
                  --with-pdo-sqlite \
                  --with-pear \
                  --enable-sockets \
                  --with-mhash \
                  --with-ldap-sasl \
                  --with-xsl \
                  --with-zlib \
                  --with-zip \
                  --with-bz2 \
                  --with-iconv \
                  --enable-fpm \
                  --enable-pdo \
                  --enable-bcmath \
                  --enable-mbregex \
                  --enable-mbstring \
                  --enable-opcache \
                  --enable-pcntl \
                  --enable-shmop \
                  --enable-soap \
                  --enable-ftp \
                  --with-xpm \
                  --enable-xml \
                  --enable-sysvsem \
                  --enable-cli \
                  --enable-intl \
                  --enable-calendar \
                  --enable-static \
                  --enable-ctype \
                  --enable-mysqlnd \
                  --enable-session \
                  --enable-redis; \
      make -j$(nproc); \
      make install; \
    done

# mariadb 编译
WORKDIR /nuoyis-build/mariadb-$MARIADB_LATEST_VERSION
RUN cmake . \
        -DCMAKE_INSTALL_PREFIX=/nuoyis-web/mariadb \
        -DMYSQL_DATADIR=/nuoyis-web/mariadb/data \
        -DSYSCONFDIR=/nuoyis-web/mariadb/config \
        -DWITH_INNOBASE_STORAGE_ENGINE=1 \
        -DWITH_ARCHIVE_STORAGE_ENGINE=1 \
        -DWITH_BLACKHOLE_STORAGE_ENGINE=1 \
        -DWITH_READLINE=1 \
        -DWITH_SSL=system \
        -DWITH_ZLIB=system \
        -DWITH_LIBWRAP=0 \
        -DWITHOUT_TOKUDB=1 \
        -DMYSQL_USER=nuoyis-web \
        -DMYSQL_UNIX_ADDR=/run/mariadb/mariadb.sock \
        -DDEFAULT_CHARSET=utf8mb4 \
        -DDEFAULT_COLLATION=utf8mb4_general_ci && \
    make -j$(nproc) && make install

# 新增步骤：收集关键二进制的共享库依赖（仅复制必要的 .so 文件）
RUN mkdir -p /runner-libs && \
    for bin in /nuoyis-web/php/$PHP_LATEST_VERSION/sbin/php-fpm /nuoyis-web/php/$PHP_STABLE_VERSION/sbin/php-fpm /nuoyis-web/mariadb/bin/mysqld; do \
        ldd $bin | grep "=> /" | awk '{print $3}' | sort -u | xargs -r -I{} cp --parents {} /runner-libs; \
    done

# 删除非必要软件包以及处理php启动文件
RUN apt-get autoremove --purge -y \
    ca-certificates \
    vim \
    jq \
    wget \
    autoconf \
    bison \
    re2c \
    make \
    procps \
    gcc \
    cmake \
    g++ \
    bison \
    libicu-dev \
    inetutils-ping \
    pkg-config \
    build-essential \
    libpcre3 \
    libpcre3-dev \
    libncurses5-dev \
    gnutls-dev \
    zlib1g-dev \
    openssl \
    libssl-dev \
    libxslt1-dev \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libxml2-dev \
    libsqlite3-dev \
    libbz2-dev \
    libcurl4-openssl-dev \
    libxpm-dev \
    libzip-dev \
    libonig-dev \
    libgd-dev \
    libaio-dev \
    libgeoip-dev && \
    apt-get clean && \
    rm -rf /var/cache/apt /var/lib/apt/lists/* /usr/share/doc /usr/share/man /usr/share/locale /usr/share/info /nuoyis-build /nuoyis-web/curl-openssl /nuoyis-web/openssl-1.1.1 && \
    mv /nuoyis-web/php/$PHP_LATEST_VERSION/etc/php-fpm.conf.default /nuoyis-web/php/$PHP_LATEST_VERSION/etc/php-fpm.conf &&\
    mv /nuoyis-web/php/$PHP_STABLE_VERSION/etc/php-fpm.conf.default /nuoyis-web/php/$PHP_STABLE_VERSION/etc/php-fpm.conf

# 配置文件添加
ADD config/nginx.conf.txt /nuoyis-web/nginx/server/conf/nginx.conf
ADD config/index.html /nuoyis-web/nginx/webside/default/index.html
ADD config/ssl/default.pem /nuoyis-web/nginx/server/conf/ssl/default.pem
ADD config/ssl/default.key /nuoyis-web/nginx/server/conf/ssl/default.key
ADD config/start-php-latest.conf.txt /nuoyis-web/nginx/server/conf/start-php-latest.conf
ADD config/path.conf.txt /nuoyis-web/nginx/server/conf/path.conf
ADD config/start-php-stable.conf.txt /nuoyis-web/nginx/server/conf/start-php-stable.conf
ADD config/latest-php.ini.txt /nuoyis-web/php/$PHP_LATEST_VERSION/etc/php.ini
ADD config/fpm-latest.conf.txt /nuoyis-web/php/$PHP_LATEST_VERSION/etc/php-fpm.d/fpm.conf
ADD config/stable-php.ini.txt /nuoyis-web/php/$PHP_STABLE_VERSION/etc/php.ini
ADD config/fpm-stable.conf.txt /nuoyis-web/php/$PHP_STABLE_VERSION/etc/php-fpm.d/fpm.conf

# 创建最终镜像
FROM docker.io/debian:bookworm-slim as runner

# 设置默认 shell
SHELL ["/bin/bash", "-c"]

# 设置时区
ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# 定义版本变量
ARG NGINX_VERSION
ARG PHP_LATEST_VERSION
ARG PHP_STABLE_VERSION
ARG PHP_REDIS_VERSION
ARG MARIADB_LATEST_VERSION

# 复制 必要的 so依赖
COPY --from=builder /runner-libs /runner-libs

# 复制 nuoyis-web文件夹
COPY --from=builder /nuoyis-web /nuoyis-web

# 环境变量
ENV PATH=/nuoyis-web/mariadb/bin:$PATH

# 必要的初始化
RUN if [ -d /runner-libs ]; then \
      find /runner-libs -type f -name '*.so*' -printf '%h\n' | sort -u > /tmp/nuoyis_lib_dirs && \
      : > /etc/ld.so.conf.d/nuoyis-runner-libs.conf && \
      while read -r d; do echo "$d" >> /etc/ld.so.conf.d/nuoyis-runner-libs.conf; done < /tmp/nuoyis_lib_dirs && \
      ldconfig && rm -f /tmp/nuoyis_lib_dirs; \
    fi; \
    useradd -u 2233 -m -s /sbin/nologin nuoyis-web && \
    usermod -aG nuoyis-web root && \
    mkdir -p /run/{mariadb,php/{stable,latest}} && \
    chown -R nuoyis-web:nuoyis-web /nuoyis-server && \
    chown -R nuoyis-web:nuoyis-web /run && \
    chmod -R 775 /run && \
    chmod -R 775 /nuoyis-web && \
    mkdir -p /lib /lib64 /usr/lib /usr/lib64 /usr/lib/x86_64-linux-gnu && \
    mkdir /docker-entrypoint-initdb.d && \
    sed -i 's/http:\/\/deb.debian.org/https:\/\/mirrors.aliyun.com/g' /etc/apt/sources.list.d/debian.sources && \
    apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false update -y && \
    apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false upgrade -y && \
    apt-get -o Acquire::https::Verify-Peer=false -o Acquire::https::Verify-Host=false install -y --no-install-recommends supervisor curl ca-certificates && \
    apt-get clean && rm -rf /var/lib/apt/lists/* && \
    ln -s /nuoyis-web/nginx/server/sbin/nginx /usr/bin/nginx && \
    ln -s /nuoyis-web/php/$PHP_LATEST_VERSION/sbin/php-fpm /usr/bin/php-latest && \
    ln -s /nuoyis-web/php/$PHP_STABLE_VERSION/sbin/php-fpm /usr/bin/php-stable

ADD config/supervisord.conf.txt /etc/supervisord.conf
ADD start.sh /

# 设置shell权限
RUN chmod +x /start.sh

# 暴露端口
EXPOSE 80 443

# 设置容器的入口点
ENTRYPOINT ["/start.sh"]
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisord.conf"]
